# coding: utf-8

$CLOUD_PROVIDER = ''

# script for looking up hostname/fqdn
# ontoportal UI requires knowing its own externally accessible fqdn
# in order to constract various things like url for ajax calls to the API 
# which is normally hosted on the same system.
# hostname_lookup should be disabled when domain names are hardcoded
#require '/opt/ontoportal/virtual_appliance/utils/hostname_lookup.rb'
require '/usr/local/bin/hostname_lookup.rb'

# replace REST_HOSTNAME fully qualified domain name i.e 'data.demo.ontoportal.org'
# and remove hostname_lookup.rb 
REST_HOSTNAME = my_hostname
REST_PORT = '8443'
UI_HOSTNAME = REST_HOSTNAME

# Organization info
$ORG = ENV['ORG'] || "OntoPortal Alliance"
$ORG_URL = ENV['ORG_URL'] || "https://ontoportal.org"

# Site name (required)
$SITE = ENV['SITE'] || "OntoPortal Appliance"

# REST core service address
$REST_URL = "https://#{REST_HOSTNAME}:#{REST_PORT}"
$REST_URL_PREFIX = $REST_URL

# Unique string representing the UI's id for use with the OntoPortal API (ontologies_api)
# api key is automatically generated and replaced on first appliance boot
$API_KEY = "3b377010-8afb-4d15-a88c-09809b94d03b"

# Announcements mailman mailing list REQUEST address, EX: list-request@lists.example.org
# NOTE: You must use the REQUEST address for the mailing list. ONLY WORKS WITH MAILMAN LISTS.
#$ANNOUNCE_LIST = 'appliance-users-request@example.org'

# Email addresses used for sending notifications (errors, feedback, support)
#$SUPPORT_EMAIL = 'support@example.org'
#$ADMIN_EMAIL = 'admin@example.org'
#$ERROR_EMAIL = 'errors@example.org'

# reCAPTCHA
# In order to use reCAPTCHA on the user account creation page:
#    1. Obtain a key from reCAPTCHA: http://recaptcha.net
#    2. Include the corresponding keys below (between the single quotes)
#    3. Set the USE_RECAPTCHA option to 'true'
#ENV['USE_RECAPTCHA'] = 'false'
#ENV['RECAPTCHA_PUBLIC_KEY']  = ''
#ENV['RECAPTCHA_PRIVATE_KEY'] = ''
