#!/usr/bin/env bash
# -----------------------------------------------------------------------------
# Part of the OntoPortal Virtual Appliance Project
# https://ontoportal.org
#
# Author: Alex Skrenchuk alex.skrenchuk@stanford.edu
# Copyright (c) 2025 Stanford University and the OntoPortal Alliance
# SPDX-License-Identifier: Apache-2.0
#
# Description
# Safe CLI for querying EC2 instance metadata and user-data from shell scripts
# Usage: ec2meta <metadata-path>
# Example: ec2meta instance-id → i-0abc123...
# -----------------------------------------------------------------------------
#
set -euo pipefail

usage() {
  {
    echo "Usage:"
    echo "  ec2meta instance-id        # EC2 instance ID"
    echo "  ec2meta public-hostname    # EC2 public DNS name"
    echo "  ec2meta local-hostname     # EC2 internal hostname"
    echo "  ec2meta userdata           # Print full user-data string"
    echo "  ec2meta ui-domain          # Extract UI_DOMAIN from user-data"
    echo "  ec2meta api-domain         # Extract API_DOMAIN from user-data"
    echo "  ec2meta is-aws             # Exit 0 if running in EC2, 1 otherwise"
  } >&2
  exit 1
}

get_userdata_var() {
  local key="$1"
  local val
  val=$(facter ec2_userdata 2>/dev/null | grep -E "^${key}=" | cut -d= -f2- | tr -d '"')
  echo "$val"
}

get_metadata_value() {
  local key="$1"
  local val
  val=$(facter ec2_metadata 2>/dev/null | grep "$key" | awk -F '=>' '{print $2}' | tr -d '", ')
  echo "$val"
}

if [[ $# -ne 1 ]]; then
  usage
fi

KEY="$1"

case "$KEY" in
  is-aws)
    if facter ec2_metadata >/dev/null 2>&1; then
      exit 0
    else
      exit 1
    fi
    ;;
  userdata)
    facter ec2_userdata 2>/dev/null || exit 1
    ;;
  ui-domain)
    get_userdata_var "UI_DOMAIN"
    ;;
  api-domain)
    get_userdata_var "API_DOMAIN"
    ;;
  instance-id|ami-id|public-hostname|local-hostname)
    get_metadata_value "$KEY" || exit 1
    ;;
  *)
    echo "❌ Unsupported key: $KEY" >&2
    usage
    ;;
esac

